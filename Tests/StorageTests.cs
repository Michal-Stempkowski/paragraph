using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using DataLayer.Storage;
using NUnit.Framework;

namespace Tests
{
    class StorageTests
    {
        public const string ExampleFile = @"
# This viminfo file was generated by Vim 7.4.
# You may edit it if you're careful!

# Value of 'encoding' when this file was written
*encoding=cp1250


# hlsearch on (H) or off (h):
~h
# Command Line History (newest to oldest):
:q
:w

# Search String History (newest to oldest):

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

";
        private string _path;

        private IStorageSupervisor _sut;

        [SetUp]
        public void SetUp()
        {
            _sut = new FileStorageSupervisor(Environment.CurrentDirectory);
            _path =
                Environment.CurrentDirectory +
                Path.DirectorySeparatorChar +
                "test.tmp";
        }

        [Test]
        public void should_be_able_to_read_and_write_to_file()
        {
            _sut.Write(_path, ExampleFile);

            var res = _sut.Read(_path);
            Assert.That(res, Is.EqualTo(ExampleFile));
        }
    }
}
